

EIGEN_PATH=../../eigen-3.3.1
CERES_SRC_PATH := ../internal/ceres

CC = /home/xlb/tool/ndk_standalone/bin/aarch64-linux-android-g++
AR = /home/xlb/tool/ndk_standalone/bin/aarch64-linux-android-ar

CPP_FILE := $(CERES_SRC_PATH)/array_utils.cc \
            $(CERES_SRC_PATH)/blas.cc \
            $(CERES_SRC_PATH)/block_evaluate_preparer.cc \
            $(CERES_SRC_PATH)/block_jacobian_writer.cc \
            $(CERES_SRC_PATH)/block_jacobi_preconditioner.cc \
            $(CERES_SRC_PATH)/block_random_access_dense_matrix.cc \
            $(CERES_SRC_PATH)/block_random_access_diagonal_matrix.cc \
            $(CERES_SRC_PATH)/block_random_access_matrix.cc \
            $(CERES_SRC_PATH)/block_random_access_sparse_matrix.cc \
            $(CERES_SRC_PATH)/block_sparse_matrix.cc \
            $(CERES_SRC_PATH)/block_structure.cc \
            $(CERES_SRC_PATH)/callbacks.cc \
            $(CERES_SRC_PATH)/canonical_views_clustering.cc \
            $(CERES_SRC_PATH)/cgnr_solver.cc \
            $(CERES_SRC_PATH)/compressed_row_jacobian_writer.cc \
            $(CERES_SRC_PATH)/compressed_row_sparse_matrix.cc \
            $(CERES_SRC_PATH)/conditioned_cost_function.cc \
            $(CERES_SRC_PATH)/conjugate_gradients_solver.cc \
            $(CERES_SRC_PATH)/coordinate_descent_minimizer.cc \
            $(CERES_SRC_PATH)/corrector.cc \
            $(CERES_SRC_PATH)/covariance.cc \
            $(CERES_SRC_PATH)/covariance_impl.cc \
            $(CERES_SRC_PATH)/dense_normal_cholesky_solver.cc \
            $(CERES_SRC_PATH)/dense_qr_solver.cc \
            $(CERES_SRC_PATH)/dense_sparse_matrix.cc \
            $(CERES_SRC_PATH)/detect_structure.cc \
            $(CERES_SRC_PATH)/dogleg_strategy.cc \
            $(CERES_SRC_PATH)/dynamic_compressed_row_jacobian_writer.cc \
            $(CERES_SRC_PATH)/dynamic_compressed_row_sparse_matrix.cc \
            $(CERES_SRC_PATH)/evaluator.cc \
            $(CERES_SRC_PATH)/file.cc \
            $(CERES_SRC_PATH)/gradient_checker.cc \
            $(CERES_SRC_PATH)/gradient_checking_cost_function.cc \
            $(CERES_SRC_PATH)/gradient_problem.cc \
            $(CERES_SRC_PATH)/gradient_problem_solver.cc \
            $(CERES_SRC_PATH)/is_close.cc \
            $(CERES_SRC_PATH)/implicit_schur_complement.cc \
            $(CERES_SRC_PATH)/iterative_schur_complement_solver.cc \
            $(CERES_SRC_PATH)/lapack.cc \
            $(CERES_SRC_PATH)/levenberg_marquardt_strategy.cc \
            $(CERES_SRC_PATH)/line_search.cc \
            $(CERES_SRC_PATH)/line_search_direction.cc \
            $(CERES_SRC_PATH)/line_search_minimizer.cc \
            $(CERES_SRC_PATH)/linear_least_squares_problems.cc \
            $(CERES_SRC_PATH)/linear_operator.cc \
            $(CERES_SRC_PATH)/line_search_preprocessor.cc \
            $(CERES_SRC_PATH)/linear_solver.cc \
            $(CERES_SRC_PATH)/local_parameterization.cc \
            $(CERES_SRC_PATH)/loss_function.cc \
            $(CERES_SRC_PATH)/low_rank_inverse_hessian.cc \
            $(CERES_SRC_PATH)/minimizer.cc \
            $(CERES_SRC_PATH)/normal_prior.cc \
            $(CERES_SRC_PATH)/parameter_block_ordering.cc \
            $(CERES_SRC_PATH)/partitioned_matrix_view.cc \
            $(CERES_SRC_PATH)/polynomial.cc \
            $(CERES_SRC_PATH)/preconditioner.cc \
            $(CERES_SRC_PATH)/preprocessor.cc \
            $(CERES_SRC_PATH)/problem.cc \
            $(CERES_SRC_PATH)/problem_impl.cc \
            $(CERES_SRC_PATH)/program.cc \
            $(CERES_SRC_PATH)/reorder_program.cc \
            $(CERES_SRC_PATH)/residual_block.cc \
            $(CERES_SRC_PATH)/residual_block_utils.cc \
            $(CERES_SRC_PATH)/schur_complement_solver.cc \
            $(CERES_SRC_PATH)/schur_eliminator.cc \
            $(CERES_SRC_PATH)/schur_jacobi_preconditioner.cc \
            $(CERES_SRC_PATH)/scratch_evaluate_preparer.cc \
            $(CERES_SRC_PATH)/solver.cc \
            $(CERES_SRC_PATH)/solver_utils.cc \
            $(CERES_SRC_PATH)/sparse_matrix.cc \
            $(CERES_SRC_PATH)/sparse_normal_cholesky_solver.cc \
            $(CERES_SRC_PATH)/split.cc \
            $(CERES_SRC_PATH)/stringprintf.cc \
            $(CERES_SRC_PATH)/suitesparse.cc \
            $(CERES_SRC_PATH)/triplet_sparse_matrix.cc \
            $(CERES_SRC_PATH)/trust_region_minimizer.cc \
            $(CERES_SRC_PATH)/trust_region_preprocessor.cc \
            $(CERES_SRC_PATH)/trust_region_step_evaluator.cc \
            $(CERES_SRC_PATH)/trust_region_strategy.cc \
            $(CERES_SRC_PATH)/types.cc \
            $(CERES_SRC_PATH)/visibility_based_preconditioner.cc \
            $(CERES_SRC_PATH)/visibility.cc \
            $(CERES_SRC_PATH)/wall_time.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_d_d_d.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_2_2.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_2_3.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_2_4.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_2_d.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_3_3.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_3_4.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_3_6.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_3_9.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_3_d.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_4_3.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_4_4.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_4_8.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_4_9.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_4_d.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_2_d_d.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_4_4_2.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_4_4_3.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_4_4_4.cc \
            $(CERES_SRC_PATH)/generated/schur_eliminator_4_4_d.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_d_d_d.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_2_2.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_2_3.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_2_4.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_2_d.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_3_3.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_3_4.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_3_6.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_3_9.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_3_d.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_4_3.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_4_4.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_4_8.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_4_9.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_4_d.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_2_d_d.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_4_4_2.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_4_4_3.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_4_4_4.cc \
            $(CERES_SRC_PATH)/generated/partitioned_matrix_view_4_4_d.cc \
            $(CERES_SRC_PATH)/miniglog/glog/logging.cc

OBJS_FILE = $(patsubst %.cc, %.o, $(CPP_FILE))
TARGET = libceres.a

INCLUDE = -I$(EIGEN_PATH) \
          -I../internal \
          -I../internal/ceres \
          -I../include \
          -I../config \
          -I../internal/ceres/miniglog

CPPFLAG =  -DCERES_NO_LAPACK \
           -DCERES_NO_SUITESPARSE \
           -DCERES_NO_CXSPARSE \
           -DCERES_STD_UNORDERED_MAP \
           -DCERES_HAVE_PTHREAD \
           -DNDEBUG \
           -DANDROID \
           -fno-exceptions -fno-rtti -std=c++11 -fpic -O2

$(TARGET): $(OBJS_FILE)
	$(AR) crsD $(TARGET) $(OBJS_FILE)
        
.cc.o:
	$(CC) $(CPPFLAG)  $(INCLUDE) -c -o $@ $<

.PHONY: clean
clean:
	rm -rf $(OBJS_FILE) $(TARGET)
